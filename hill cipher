#include <stdio.h>
#include <string.h>
#define S 5

void encryptPlayfair(char *k, char *t, char *c) {
    int m[S][S], i = 0, j = 0;
    for (i = 0; i < S; i++)
        for (j = 0; j < S; j++)
            m[i][j] = 0;
    for (i = 0; i < strlen(k); i++)
        if (m[(k[i] - 97) / S][(k[i] - 97) % S] == 0)
            m[(k[i] - 97) / S][(k[i] - 97) % S] = 1;
    for (i = 0; i < S; i++)
        for (j = 0; j < S; j++)
            if (m[i][j] == 0) {
                m[i][j] = 1;
                m[i][j] = 1;
                k[strlen(k)] = i * S + j + 97;
            }
    for (i = 0; i < strlen(t); i += 2)
        if (t[i] == t[i + 1]) {
            for (j = strlen(t); j > i + 1; j--)
                t[j] = t[j - 1];
            t[i + 1] = 'x';
            t[strlen(t)] = '\0';
        }
    if (strlen(t) % 2 != 0) {
        t[strlen(t)] = 'x';
        t[strlen(t) + 1] = '\0';
    }
    for (i = 0; i < strlen(t); i += 2) {
        int r1 = t[i] / S, r2 = t[i + 1] / S, c1 = t[i] % S, c2 = t[i + 1] % S;
        if (r1 == r2) {
            c[i] = m[r1][(c1 + 1) % S];
            c[i + 1] = m[r1][(c2 + 1) % S];
        }
        else if (c1 == c2) {
            c[i] = m[(r1 + 1) % S][c1];
            c[i + 1] = m[(r2 + 1) % S][c1];
        }
        else {
            c[i] = m[r1][c2];
            c[i + 1] = m[r2][c1];
        }
    }
}

int main() {
    char key[] = "engineering";
    char text[] = "computer";
    char cipher[100] = "";
    encryptPlayfair(key, text, cipher);
    printf("Key: %s\n", key);
    printf("Text: %s\n", text);
    printf("Cipher text: %s\n", cipher);
    return 0;
}
